package com.example.demo.models;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "research_papers")
public class ResearchPaper {
    
    @Id
    private String id;
    private String title;
    private String author;
    private String department;
    private String institution;
    private String instituteId; // Reference to Institute model
    private String supervisor;
    private String coSupervisor;
    private LocalDateTime submissionDate;
    private LocalDateTime uploadedDate;
    private String fileHash; // SHA-256 hash of PDF
    private String fileName;
    private Long fileSize;
    private String filePath; // Storage path/URL
    private String abstractText;
    private List<String> keywords;
    private String status; // PENDING, VERIFIED, REJECTED
    private String uploadedBy; // Admin user ID who uploaded
    private String blockchainTxId; // Blockchain transaction ID
    private String blockchainHash; // Blockchain verification hash
    private LocalDateTime verificationDate;
    
    // Embedding fields for AI-powered search and similarity
    private List<Double> documentEmbedding; // Document/PDF content embedding generated by Ollama
    private List<Double> titleEmbedding; // Title embedding for semantic search
    private String embeddingModel; // Name of the Ollama model used (e.g., "nomic-embed-text")
    private LocalDateTime embeddingGeneratedAt; // When embeddings were generated
    
    @CreatedDate
    private LocalDateTime createdAt;
    
    @LastModifiedDate
    private LocalDateTime updatedAt;
    
    // Constructors
    public ResearchPaper() {}
    
    public ResearchPaper(String id, String title, String author, String department, String institution,
                        String instituteId, String supervisor, String coSupervisor, LocalDateTime submissionDate,
                        LocalDateTime uploadedDate, String fileHash, String fileName, Long fileSize,
                        String filePath, String abstractText, List<String> keywords, String status,
                        String uploadedBy, String blockchainTxId, String blockchainHash,
                        LocalDateTime verificationDate, List<Double> documentEmbedding, List<Double> titleEmbedding,
                        String embeddingModel, LocalDateTime embeddingGeneratedAt, LocalDateTime createdAt, LocalDateTime updatedAt) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.department = department;
        this.institution = institution;
        this.instituteId = instituteId;
        this.supervisor = supervisor;
        this.coSupervisor = coSupervisor;
        this.submissionDate = submissionDate;
        this.uploadedDate = uploadedDate;
        this.fileHash = fileHash;
        this.fileName = fileName;
        this.fileSize = fileSize;
        this.filePath = filePath;
        this.abstractText = abstractText;
        this.keywords = keywords;
        this.status = status;
        this.uploadedBy = uploadedBy;
        this.blockchainTxId = blockchainTxId;
        this.blockchainHash = blockchainHash;
        this.verificationDate = verificationDate;
        this.documentEmbedding = documentEmbedding;
        this.titleEmbedding = titleEmbedding;
        this.embeddingModel = embeddingModel;
        this.embeddingGeneratedAt = embeddingGeneratedAt;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    
    // Getters
    public String getId() { return id; }
    public String getTitle() { return title; }
    public String getAuthor() { return author; }
    public String getDepartment() { return department; }
    public String getInstitution() { return institution; }
    public String getInstituteId() { return instituteId; }
    public String getSupervisor() { return supervisor; }
    public String getCoSupervisor() { return coSupervisor; }
    public LocalDateTime getSubmissionDate() { return submissionDate; }
    public LocalDateTime getUploadedDate() { return uploadedDate; }
    public String getFileHash() { return fileHash; }
    public String getFileName() { return fileName; }
    public Long getFileSize() { return fileSize; }
    public String getFilePath() { return filePath; }
    public String getAbstractText() { return abstractText; }
    public List<String> getKeywords() { return keywords; }
    public String getStatus() { return status; }
    public String getUploadedBy() { return uploadedBy; }
    public String getBlockchainTxId() { return blockchainTxId; }
    public String getBlockchainHash() { return blockchainHash; }
    public LocalDateTime getVerificationDate() { return verificationDate; }
    public List<Double> getDocumentEmbedding() { return documentEmbedding; }
    public List<Double> getTitleEmbedding() { return titleEmbedding; }
    public String getEmbeddingModel() { return embeddingModel; }
    public LocalDateTime getEmbeddingGeneratedAt() { return embeddingGeneratedAt; }
    public LocalDateTime getCreatedAt() { return createdAt; }
    public LocalDateTime getUpdatedAt() { return updatedAt; }
    
    // Setters
    public void setId(String id) { this.id = id; }
    public void setTitle(String title) { this.title = title; }
    public void setAuthor(String author) { this.author = author; }
    public void setDepartment(String department) { this.department = department; }
    public void setInstitution(String institution) { this.institution = institution; }
    public void setInstituteId(String instituteId) { this.instituteId = instituteId; }
    public void setSupervisor(String supervisor) { this.supervisor = supervisor; }
    public void setCoSupervisor(String coSupervisor) { this.coSupervisor = coSupervisor; }
    public void setSubmissionDate(LocalDateTime submissionDate) { this.submissionDate = submissionDate; }
    public void setUploadedDate(LocalDateTime uploadedDate) { this.uploadedDate = uploadedDate; }
    public void setFileHash(String fileHash) { this.fileHash = fileHash; }
    public void setFileName(String fileName) { this.fileName = fileName; }
    public void setFileSize(Long fileSize) { this.fileSize = fileSize; }
    public void setFilePath(String filePath) { this.filePath = filePath; }
    public void setAbstractText(String abstractText) { this.abstractText = abstractText; }
    public void setKeywords(List<String> keywords) { this.keywords = keywords; }
    public void setStatus(String status) { this.status = status; }
    public void setUploadedBy(String uploadedBy) { this.uploadedBy = uploadedBy; }
    public void setBlockchainTxId(String blockchainTxId) { this.blockchainTxId = blockchainTxId; }
    public void setBlockchainHash(String blockchainHash) { this.blockchainHash = blockchainHash; }
    public void setVerificationDate(LocalDateTime verificationDate) { this.verificationDate = verificationDate; }
    public void setDocumentEmbedding(List<Double> documentEmbedding) { this.documentEmbedding = documentEmbedding; }
    public void setTitleEmbedding(List<Double> titleEmbedding) { this.titleEmbedding = titleEmbedding; }
    public void setEmbeddingModel(String embeddingModel) { this.embeddingModel = embeddingModel; }
    public void setEmbeddingGeneratedAt(LocalDateTime embeddingGeneratedAt) { this.embeddingGeneratedAt = embeddingGeneratedAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }
    
    // Builder pattern
    public static ResearchPaperBuilder builder() {
        return new ResearchPaperBuilder();
    }
    
    public static class ResearchPaperBuilder {
        private String id;
        private String title;
        private String author;
        private String department;
        private String institution;
        private String instituteId;
        private String supervisor;
        private String coSupervisor;
        private LocalDateTime submissionDate;
        private LocalDateTime uploadedDate;
        private String fileHash;
        private String fileName;
        private Long fileSize;
        private String filePath;
        private String abstractText;
        private List<String> keywords;
        private String status = "PENDING";
        private String uploadedBy;
        private String blockchainTxId;
        private String blockchainHash;
        private LocalDateTime verificationDate;
        private List<Double> documentEmbedding;
        private List<Double> titleEmbedding;
        private String embeddingModel;
        private LocalDateTime embeddingGeneratedAt;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        
        public ResearchPaperBuilder id(String id) { this.id = id; return this; }
        public ResearchPaperBuilder title(String title) { this.title = title; return this; }
        public ResearchPaperBuilder author(String author) { this.author = author; return this; }
        public ResearchPaperBuilder department(String department) { this.department = department; return this; }
        public ResearchPaperBuilder institution(String institution) { this.institution = institution; return this; }
        public ResearchPaperBuilder instituteId(String instituteId) { this.instituteId = instituteId; return this; }
        public ResearchPaperBuilder supervisor(String supervisor) { this.supervisor = supervisor; return this; }
        public ResearchPaperBuilder coSupervisor(String coSupervisor) { this.coSupervisor = coSupervisor; return this; }
        public ResearchPaperBuilder submissionDate(LocalDateTime submissionDate) { this.submissionDate = submissionDate; return this; }
        public ResearchPaperBuilder uploadedDate(LocalDateTime uploadedDate) { this.uploadedDate = uploadedDate; return this; }
        public ResearchPaperBuilder fileHash(String fileHash) { this.fileHash = fileHash; return this; }
        public ResearchPaperBuilder fileName(String fileName) { this.fileName = fileName; return this; }
        public ResearchPaperBuilder fileSize(Long fileSize) { this.fileSize = fileSize; return this; }
        public ResearchPaperBuilder filePath(String filePath) { this.filePath = filePath; return this; }
        public ResearchPaperBuilder abstractText(String abstractText) { this.abstractText = abstractText; return this; }
        public ResearchPaperBuilder keywords(List<String> keywords) { this.keywords = keywords; return this; }
        public ResearchPaperBuilder status(String status) { this.status = status; return this; }
        public ResearchPaperBuilder uploadedBy(String uploadedBy) { this.uploadedBy = uploadedBy; return this; }
        public ResearchPaperBuilder blockchainTxId(String blockchainTxId) { this.blockchainTxId = blockchainTxId; return this; }
        public ResearchPaperBuilder blockchainHash(String blockchainHash) { this.blockchainHash = blockchainHash; return this; }
        public ResearchPaperBuilder verificationDate(LocalDateTime verificationDate) { this.verificationDate = verificationDate; return this; }
        public ResearchPaperBuilder documentEmbedding(List<Double> documentEmbedding) { this.documentEmbedding = documentEmbedding; return this; }
        public ResearchPaperBuilder titleEmbedding(List<Double> titleEmbedding) { this.titleEmbedding = titleEmbedding; return this; }
        public ResearchPaperBuilder embeddingModel(String embeddingModel) { this.embeddingModel = embeddingModel; return this; }
        public ResearchPaperBuilder embeddingGeneratedAt(LocalDateTime embeddingGeneratedAt) { this.embeddingGeneratedAt = embeddingGeneratedAt; return this; }
        public ResearchPaperBuilder createdAt(LocalDateTime createdAt) { this.createdAt = createdAt; return this; }
        public ResearchPaperBuilder updatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; return this; }
        
        public ResearchPaper build() {
            return new ResearchPaper(id, title, author, department, institution, instituteId, supervisor, coSupervisor,
                                   submissionDate, uploadedDate, fileHash, fileName, fileSize, filePath,
                                   abstractText, keywords, status, uploadedBy, blockchainTxId, blockchainHash,
                                   verificationDate, documentEmbedding, titleEmbedding, embeddingModel, 
                                   embeddingGeneratedAt, createdAt, updatedAt);
        }
    }
    
    @Override
    public String toString() {
        return "ResearchPaper{" +
                "id='" + id + '\'' +
                ", title='" + title + '\'' +
                ", author='" + author + '\'' +
                ", department='" + department + '\'' +
                ", institution='" + institution + '\'' +
                ", status='" + status + '\'' +
                ", uploadedBy='" + uploadedBy + '\'' +
                ", createdAt=" + createdAt +
                '}';
    }
}